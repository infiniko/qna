// Number of Provinces (graph)

class Solution {
public:
    void dfs(int node, vector<vector<int>> &adj, vector<int> &vis){

        vis[node] = 1;
        for(int it: adj[node]){
            if(vis[it] != 1){
                dfs(it,adj,vis);
            }
        }
    }

    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        vector<vector<int>> adj(n);

        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConnected[i][j]==1&& i!=j){
                    adj[i].push_back(j);
                    adj[j].push_back(i);
                }
            }
        }

        vector<int> vis(n,0);
        int prov=0;
        for(int x = 0;x<n;x++){
            if(vis[x] != 1){
                prov++;
                dfs(x,adj,vis);
            }
        }
        return prov;
    }
};