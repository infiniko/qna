// check if children sum property is applicable 
class Solution{
    public:
    //Function to check whether all nodes of a tree have the value 
    //equal to the sum of their child nodes.
    bool isLeaf(Node* root){
        if(!root->left && !root->right){
            return true;
        }
        return false;
    }
    int isSumProperty(Node *root)
    {
     // Add your code here
        if(!root || isLeaf(root)){
            return 1;
        }
        int sum = 0;
        if(root->left) sum+= root->left->data;
        if(root->right) sum+= root->right->data;
        
        if(sum != root->data){
            return 0;
        }
        else{
            return isSumProperty(root->left) & isSumProperty(root->right);
        }
    }
};


// convert to children sum property tree
void changeTree(BinaryTreeNode * root) {
    if(root==NULL)
    return;
    int child=0;
    
    if(root->left)
    child+=root->left->data;
    if(root->right)
    child+=root->right->data;

    //we make sure that while going down the child has no shortage
    if(child < root->data)
    {
        if(root->left)
        {
            root->left->data=root->data;
        }
        if(root->right)
        {
            root->right->data=root->data;
        }
    }

    changeTree(root->left);
    changeTree(root->right);

    //while going back up
    int tot=0;
    if(root->left)
    tot+=root->left->data;
    if(root->right)
    tot+=root->right->data;
    
    if(root->left || root->right)
    root->data=tot;
}